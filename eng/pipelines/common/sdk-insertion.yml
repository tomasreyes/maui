parameters:
  poolName: VSEngSS-MicroBuild2022-1ES
  vmImage: ''
  os: windows 
  pushMauiPackagesToMaestro: false
  nugetArtifactName: nuget-signed
  nugetArtifactPath: $(Build.StagingDirectory)\nuget-signed

jobs:
- job: create_artifact_statuses
  displayName: Create GitHub Artifact Status and Push to Maestro
  timeoutInMinutes: 60
  pool:
    name: ${{ parameters.poolName }}
    image: ${{ parameters.vmImage }}
    os: ${{ parameters.os }}
  variables:
  - group: Publish-Build-Assets
  steps:
  - checkout: self
  - task: DownloadPipelineArtifact@2
    inputs:
      artifactName: ${{ parameters.nugetArtifactName }}
      downloadPath: ${{ parameters.nugetArtifactPath }}
      patterns: |
        *.nupkg
        **/*.snupkg
        **/additional-assets.zip
  - task: DownloadPipelineArtifact@2
    inputs:
      artifactName: vs-msi-nugets
      downloadPath: ${{ parameters.nugetArtifactPath }}
  - template: templates\common\upload-vs-insertion-artifacts.yml@sdk-insertions
    parameters:
      githubToken: $(github--pat--vs-mobiletools-engineering-service2)
      githubContext: $(NupkgCommitStatusName)
      blobName: $(NupkgCommitStatusName)
      packagePrefix: maui
      artifactsPath: ${{ parameters.nugetArtifactPath }}
      yamlResourceName: yaml-templates
  - template: templates\common\upload-vs-insertion-artifacts.yml@sdk-insertions
    parameters:
      githubToken: $(github--pat--vs-mobiletools-engineering-service2)
      githubContext: $(VSDropCommitStatusName)
      blobName: $(VSDropCommitStatusName)
      packagePrefix: maui
      artifactsPath: $(Build.StagingDirectory)/$(VSDropCommitStatusName)
      yamlResourceName: yaml-templates
      downloadSteps:
      - task: DownloadPipelineArtifact@2
        inputs:
          artifactName: vsdrop-signed
          downloadPath: $(Build.StagingDirectory)/$(VSDropCommitStatusName)
  - template: templates\common\upload-vs-insertion-artifacts.yml@sdk-insertions
    parameters:
      githubToken: $(github--pat--vs-mobiletools-engineering-service2)
      githubContext: $(MultiTargetVSDropCommitStatusName)
      blobName: $(MultiTargetVSDropCommitStatusName)
      packagePrefix: maui
      artifactsPath: $(Build.StagingDirectory)/$(MultiTargetVSDropCommitStatusName)
      yamlResourceName: yaml-templates
      downloadSteps:
      - task: DownloadPipelineArtifact@2
        inputs:
          artifactName: vsdrop-multitarget-signed
          downloadPath: $(Build.StagingDirectory)/$(MultiTargetVSDropCommitStatusName)
  - task: DotNetCoreCLI@2
    displayName: Generate and publish BAR manifest
    inputs:
      projects: $(Build.SourcesDirectory)\src\Workload\Microsoft.Maui.Sdk\Microsoft.Maui.Sdk.csproj
      arguments: >-
        -t:PushManifestToBuildAssetRegistry
        -p:BuildAssetRegistryToken=$(MaestroAccessToken)
        -p:OutputPath=$(Build.StagingDirectory)\nuget-signed\
        -v:n -bl:$(Build.StagingDirectory)\binlogs\push-bar-manifest.binlog
    condition: and(succeeded(), eq('${{ parameters.pushMauiPackagesToMaestro }}', 'true'))
  - powershell: |
      $versionEndpoint = 'https://maestro.dot.net/api/assets/darc-version?api-version=2019-01-16'
      $darcVersion = $(Invoke-WebRequest -Uri $versionEndpoint -UseBasicParsing).Content
      $arcadeServicesSource = 'https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-eng/nuget/v3/index.json'
      & dotnet tool update microsoft.dotnet.darc --version "$darcVersion" --add-source "$arcadeServicesSource" --tool-path $(Agent.ToolsDirectory)\darc -v n
      & $(Agent.ToolsDirectory)\darc\darc add-build-to-channel --default-channels --id $(BARBuildId) --publishing-infra-version 3 --password $(MaestroAccessToken) --azdev-pat $(publishing-dnceng-devdiv-code-r-build-re)
    displayName: Add build to default darc channel
    condition: and(succeeded(), eq('${{ parameters.pushMauiPackagesToMaestro }}', 'true'))
