parameters:
  androidPool: { }
  iosPool: { }
  windowsPool: { }
  macosPool: { }
  androidCompatibilityPool: { }
  iosCompatibilityPool: { }
  androidLegacyPool: { }
  iosLegacyPool: { }
  androidApiLevels: [ 30 ]
  iosVersions: [ 'latest' ]
  provisionatorChannel: 'latest'
  agentPoolAccessToken: ''
  runCompatibilityTests: false
  runLegacyTests: true
  testFilter: ''
  projects:
    - name: name
      desc: Human Description
      android: /optional/path/to/android.csproj
      ios: /optional/path/to/ios.csproj
      winui: /optional/path/to/winui.csproj
      mac: /optional/path/to/mac.csproj
      app: /optional/path/to/app.csproj
      compatibilityAndroidApp: /optional/path/to/app.csproj
      compatibilityAndroidTestProject: /optional/path/to/android.csproj
      compatibilityiOSTestProject: /optional/path/to/ios.csproj
      compatibilityiOSApp: /optional/path/to/app.csproj
      legacyAndroidApp: /optional/path/to/app.csproj
      legacyAndroidTestProject: /optional/path/to/android.csproj
      legacyiOSTestProject: /optional/path/to/ios.csproj
      legacyiOSApp: /optional/path/to/app.csproj

stages:

  - stage: android_ui_tests
    displayName: Android UITests
    dependsOn: []
    jobs:
      - job: build_android_ui_tests
        displayName: Build Sample App
        pool: ${{ parameters.androidPool }}
        variables:
          REQUIRED_XCODE: $(DEVICETESTS_REQUIRED_XCODE)
          APPIUM_HOME: $(System.DefaultWorkingDirectory)/.appium/
        steps:
          - template: ui-tests-build-sample.yml

      - ${{ each project in parameters.projects }}:
        - ${{ if ne(project.android, '') }}:
          - ${{ each api in parameters.androidApiLevels }}:
            - ${{ if not(containsValue(project.androidApiLevelsExclude, api)) }}:
              - ${{ each category in parameters.categoriesToTest }}:
                - job: android_ui_tests_${{ project.name }}_${{ api }}_${{ category }}
                  dependsOn: build_android_ui_tests
                  timeoutInMinutes: 240 # how long to run the job before automatically cancelling
                  workspace:
                    clean: all
                  displayName: ${{ coalesce(project.desc, project.name) }} (API ${{ api }}, category ${{ category }})
                  pool: ${{ parameters.androidPool }}
                  variables:
                    REQUIRED_XCODE: $(DEVICETESTS_REQUIRED_XCODE)
                    APPIUM_HOME: $(System.DefaultWorkingDirectory)/.appium/
                  steps:
                    - template: ui-tests-steps.yml
                      parameters:
                        platform: android
                        version: ${{ api }}
                        path: ${{ project.android }}
                        app: ${{ project.app }}
                        ${{ if eq(api, 27) }}:
                          device: android-emulator-32_${{ api }}
                        ${{ if not(eq(api, 27)) }}:
                          device: android-emulator-64_${{ api }}
                        provisionatorChannel: ${{ parameters.provisionatorChannel }}
                        agentPoolAccessToken: ${{ parameters.agentPoolAccessToken }}
                        testFilter: 'TestCategory=${{ category }}'

  - stage: ios_ui_tests
    displayName: iOS UITests
    dependsOn: []
    jobs:
      - ${{ each project in parameters.projects }}:
        - ${{ if ne(project.ios, '') }}:
          - ${{ each version in parameters.iosVersions }}:
            - ${{ if not(containsValue(project.iosVersionsExclude, version)) }}:
              - ${{ each category in parameters.categoriesToTest }}:
                - job: ios_ui_tests_${{ project.name }}_${{ replace(version, '.', '_') }}_${{ category }}
                  timeoutInMinutes: 240 # how long to run the job before automatically cancelling
                  workspace:
                    clean: all
                  displayName: ${{ coalesce(project.desc, project.name) }} (v${{ version }}, category ${{ category }})
                  pool: ${{ parameters.iosPool }}
                  variables:
                    REQUIRED_XCODE: $(DEVICETESTS_REQUIRED_XCODE)
                    APPIUM_HOME: $(System.DefaultWorkingDirectory)/.appium/
                  steps:
                    - template: ui-tests-steps.yml
                      parameters:
                        platform: ios
                        ${{ if eq(version, 'latest') }}:
                          version: 16.4
                        ${{ if ne(version, 'latest') }}:
                          version: ${{ version }}
                        path: ${{ project.ios }}
                        app: ${{ project.app }}
                        ${{ if eq(version, 'latest') }}:
                          device: ios-simulator-64
                        ${{ if ne(version, 'latest') }}:
                          device: ios-simulator-64_${{ version }}
                        provisionatorChannel: ${{ parameters.provisionatorChannel }}
                        agentPoolAccessToken: ${{ parameters.agentPoolAccessToken }}
                        testFilter: 'TestCategory=${{ category }}'

  - stage: winui_ui_tests
    displayName: WinUI UITests
    dependsOn: []
    jobs:
      - ${{ each project in parameters.projects }}:
        - ${{ if ne(project.winui, '') }}:
          - ${{ each category in parameters.categoriesToTest }}:
                - job: winui_ui_tests_${{ project.name }}_${{ category }}
                  timeoutInMinutes: 240 # how long to run the job before automatically cancelling
                  workspace:
                    clean: all
                  displayName: ${{ coalesce(project.desc, project.name) }} (Category ${{ category }})
                  pool: ${{ parameters.windowsPool }}
                  variables:
                    APPIUM_HOME: $(System.DefaultWorkingDirectory)\.appium\
                  steps:
                    - template: ui-tests-steps.yml
                      parameters:
                        platform: windows
                        version: "10.0.19041.0"
                        device: windows10
                        path: ${{ project.winui }}
                        app: ${{ project.app }}
                        provisionatorChannel: ${{ parameters.provisionatorChannel }}
                        agentPoolAccessToken: ${{ parameters.agentPoolAccessToken }}
                        testFilter: 'TestCategory=${{ category }}'

  - stage: mac_ui_tests
    displayName: macOS UITests
    dependsOn: []
    jobs:
      - ${{ each project in parameters.projects }}:
        - ${{ if ne(project.mac, '') }}:
          - ${{ each category in parameters.categoriesToTest }}:
                - job: mac_ui_tests_${{ project.name }}_${{ category }}
                  timeoutInMinutes: 240 # how long to run the job before automatically cancelling
                  workspace:
                    clean: all
                  displayName: ${{ coalesce(project.desc, project.name) }} (Category ${{ category }})
                  pool: ${{ parameters.macosPool }}
                  variables:
                    REQUIRED_XCODE: $(DEVICETESTS_REQUIRED_XCODE)
                    APPIUM_HOME: $(System.DefaultWorkingDirectory)/.appium/
                  steps:
                    - template: ui-tests-steps.yml
                      parameters:
                        platform: catalyst
                        version: "13.1"
                        device: mac
                        path: ${{ project.mac }}
                        app: ${{ project.app }}
                        provisionatorChannel: ${{ parameters.provisionatorChannel }}
                        agentPoolAccessToken: ${{ parameters.agentPoolAccessToken }}
                        testFilter: 'TestCategory=${{ category }}'

  - ${{ if eq(parameters.runCompatibilityTests, true) }}:  
    - stage: android_compatibility_ui_tests
      displayName: Android Compatibility UITests
      dependsOn: []
      jobs:
        - ${{ each project in parameters.projects }}:
          - ${{ if ne(project.android, '') }}:
            - ${{ each api in parameters.androidApiLevels }}:
              - ${{ if not(containsValue(project.androidApiLevelsExclude, api)) }}:
                - ${{ each category in parameters.categoriesToTest }}:
                  - job: android_compatibility_ui_tests_${{ project.name }}_${{ api }}_${{ category }}
                    timeoutInMinutes: 240
                    workspace:
                      clean: all
                    displayName: ${{ coalesce(project.desc, project.name) }} (API ${{ api }}, category ${{ category }})
                    pool: ${{ parameters.androidCompatibilityPool }}
                    variables:
                      REQUIRED_XCODE: $(DEVICETESTS_REQUIRED_XCODE)
                    steps:
                      - template: ui-tests-compatibility-steps.yml
                        parameters:
                          platform: android
                          provisionPlatform: macos
                          configuration: Debug
                          version: ${{ api }}
                          path: ${{ project.compatibilityAndroidTestProject }}
                          app: ${{ project.compatibilityAndroidApp }}
                          targetSample: "dotnet-legacy-controlgallery-android"
                          ${{ if eq(api, 27) }}:
                            DEVICE: android-emulator-32_${{ api }}
                          ${{ if not(eq(api, 27)) }}:
                            DEVICE: android-emulator-64_${{ api }}
                          provisionatorChannel: ${{ parameters.provisionatorChannel }}
                          agentPoolAccessToken: ${{ parameters.agentPoolAccessToken }}
                          testFilter: 'TestCategory=${{ category }}'

    - stage: ios_compatibility_ui_tests
      displayName: iOS Compatibility UITests
      dependsOn: []
      jobs:
        - ${{ each project in parameters.projects }}:
          - ${{ if ne(project.ios, '') }}:
            - ${{ each version in parameters.iosVersions }}:
              - ${{ if not(containsValue(project.iosVersionsExclude, version)) }}:
                - ${{ each category in parameters.categoriesToTest }}:
                  - job: ios_compatibility_ui_tests_${{ project.name }}_${{ replace(version, '.', '_') }}_${{ category }}
                    timeoutInMinutes: 240
                    workspace:
                      clean: all
                    displayName: ${{ coalesce(project.desc, project.name) }} (v${{ version }}, category ${{ category }})
                    pool: ${{ parameters.iosCompatibilityPool }}
                    variables:
                      REQUIRED_XCODE: $(DEVICETESTS_REQUIRED_XCODE)
                    steps:
                      - template: ui-tests-compatibility-steps.yml
                        parameters:
                          platform: ios
                          provisionPlatform: macos
                          configuration: Debug
                          ${{ if eq(version, 'latest') }}:
                            version: 16.2
                          ${{ if ne(version, 'latest') }}:
                            version: ${{ version }}
                          path: ${{ project.compatibilityiOSTestProject }}
                          app: ${{ project.compatibilityiOSApp }}
                          targetSample: "dotnet-legacy-controlgallery-ios"
                          ${{ if eq(version, 'latest') }}:
                            device: ios-simulator-64
                          ${{ if ne(version, 'latest') }}:
                            device: ios-simulator-64_${{ version }}
                          provisionatorChannel: ${{ parameters.provisionatorChannel }}
                          agentPoolAccessToken: ${{ parameters.agentPoolAccessToken }}
                          testFilter: 'TestCategory=${{ category }}'

  - ${{ if eq(parameters.runLegacyTests, true) }}:  
    - stage: android_legacy_ui_tests
      displayName: Android Legacy UITests
      dependsOn: []
      jobs:
        - ${{ each project in parameters.projects }}:
          - ${{ if ne(project.android, '') }}:
            - ${{ each api in parameters.androidApiLevels }}:
              - ${{ if not(containsValue(project.androidApiLevelsExclude, api)) }}:
                - ${{ each category in parameters.categoriesToTest }}:
                  - job: android_legacy_ui_tests_${{ project.name }}_${{ api }}_${{ category }}
                    timeoutInMinutes: 240
                    workspace:
                      clean: all
                    displayName: ${{ coalesce(project.desc, project.name) }} (API ${{ api }}, ${{ category }})
                    pool: ${{ parameters.androidLegacyPool }}
                    variables:
                      REQUIRED_XCODE: $(DEVICETESTS_REQUIRED_XCODE)
                      APPIUM_HOME: $(System.DefaultWorkingDirectory)/.appium/
                    steps:
                      - template: ui-tests-legacy-steps.yml
                        parameters:
                          platform: android
                          version: ${{ api }}
                          path: ${{ project.legacyAndroidTestProject }}
                          app: ${{ project.legacyAndroidApp }}
                          targetSample: "dotnet-legacy-controlgallery-android"
                          ${{ if eq(api, 27) }}:
                            device: android-emulator-32_${{ api }}
                          ${{ if not(eq(api, 27)) }}:
                            device: android-emulator-64_${{ api }}
                          provisionatorChannel: ${{ parameters.provisionatorChannel }}
                          agentPoolAccessToken: ${{ parameters.agentPoolAccessToken }}
                          testFilter: 'TestCategory=${{ category }}'

    - stage: ios_legacy_ui_tests
      displayName: iOS Legacy UITests
      dependsOn: []
      jobs:
        - ${{ each project in parameters.projects }}:
          - ${{ if ne(project.ios, '') }}:
            - ${{ each version in parameters.iosVersions }}:
              - ${{ if not(containsValue(project.iosVersionsExclude, version)) }}:
                - ${{ each category in parameters.categoriesToTest }}:
                  - job: ios_legacy_ui_tests_${{ project.name }}_${{ replace(version, '.', '_') }}_${{ category }}
                    timeoutInMinutes: 240
                    workspace:
                      clean: all
                    displayName: ${{ coalesce(project.desc, project.name) }} (v${{ version }}, category ${{ category }})
                    pool: ${{ parameters.iosLegacyPool }}
                    variables:
                      REQUIRED_XCODE: $(DEVICETESTS_REQUIRED_XCODE)
                      APPIUM_HOME: $(System.DefaultWorkingDirectory)/.appium/
                    steps:
                      - template: ui-tests-legacy-steps.yml
                        parameters:
                          platform: ios
                          ${{ if eq(version, 'latest') }}:
                            version: 16.4
                          ${{ if ne(version, 'latest') }}:
                            version: ${{ version }}
                          path: ${{ project.legacyiOSTestProject }}
                          app: ${{ project.legacyiOSApp }}
                          targetSample: "dotnet-legacy-controlgallery-ios"
                          ${{ if eq(version, 'latest') }}:
                            device: ios-simulator-64
                          ${{ if ne(version, 'latest') }}:
                            device: ios-simulator-64_${{ version }}
                          provisionatorChannel: ${{ parameters.provisionatorChannel }}
                          agentPoolAccessToken: ${{ parameters.agentPoolAccessToken }}
                          testFilter: 'TestCategory=${{ category }}'