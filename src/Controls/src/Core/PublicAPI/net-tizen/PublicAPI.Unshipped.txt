#nullable enable
Microsoft.Maui.Controls.PlatformDragStartingEventArgs
Microsoft.Maui.Controls.PlatformDropCompletedEventArgs
Microsoft.Maui.Controls.PlatformDragEventArgs
Microsoft.Maui.Controls.PlatformDropEventArgs
Microsoft.Maui.Controls.DragEventArgs.PlatformArgs.get -> Microsoft.Maui.Controls.PlatformDragEventArgs?
Microsoft.Maui.Controls.DragStartingEventArgs.PlatformArgs.get -> Microsoft.Maui.Controls.PlatformDragStartingEventArgs?
Microsoft.Maui.Controls.DropCompletedEventArgs.PlatformArgs.get -> Microsoft.Maui.Controls.PlatformDropCompletedEventArgs?
Microsoft.Maui.Controls.DropEventArgs.PlatformArgs.get -> Microsoft.Maui.Controls.PlatformDropEventArgs?
Microsoft.Maui.Controls.KeyboardAccelerator
Microsoft.Maui.Controls.KeyboardAccelerator.Key.get -> string?
Microsoft.Maui.Controls.KeyboardAccelerator.Key.set -> void
Microsoft.Maui.Controls.KeyboardAccelerator.KeyboardAccelerator() -> void
Microsoft.Maui.Controls.KeyboardAccelerator.Modifiers.get -> Microsoft.Maui.KeyboardAcceleratorModifiers
Microsoft.Maui.Controls.KeyboardAccelerator.Modifiers.set -> void
Microsoft.Maui.Controls.MenuFlyoutItem.KeyboardAccelerators.get -> System.Collections.Generic.IList<Microsoft.Maui.Controls.KeyboardAccelerator!>!
Microsoft.Maui.Controls.DragEventArgs.Data.get -> Microsoft.Maui.Controls.DataPackage!
Microsoft.Maui.Controls.DragEventArgs.DragEventArgs(Microsoft.Maui.Controls.DataPackage! dataPackage) -> void
Microsoft.Maui.Controls.DragGestureRecognizer.DragStarting -> System.EventHandler<Microsoft.Maui.Controls.DragStartingEventArgs!>?
Microsoft.Maui.Controls.DragGestureRecognizer.DragStartingCommand.get -> System.Windows.Input.ICommand!
Microsoft.Maui.Controls.DragGestureRecognizer.DragStartingCommand.set -> void
Microsoft.Maui.Controls.DragGestureRecognizer.DragStartingCommandParameter.get -> object!
Microsoft.Maui.Controls.DragGestureRecognizer.DragStartingCommandParameter.set -> void
Microsoft.Maui.Controls.DragGestureRecognizer.DropCompleted -> System.EventHandler<Microsoft.Maui.Controls.DropCompletedEventArgs!>?
Microsoft.Maui.Controls.DragGestureRecognizer.DropCompletedCommand.get -> System.Windows.Input.ICommand!
Microsoft.Maui.Controls.DragGestureRecognizer.DropCompletedCommand.set -> void
Microsoft.Maui.Controls.DragGestureRecognizer.DropCompletedCommandParameter.get -> object!
Microsoft.Maui.Controls.DragGestureRecognizer.DropCompletedCommandParameter.set -> void
Microsoft.Maui.Controls.DragStartingEventArgs.Data.get -> Microsoft.Maui.Controls.DataPackage!
Microsoft.Maui.Controls.DropEventArgs.Data.get -> Microsoft.Maui.Controls.DataPackageView!
Microsoft.Maui.Controls.DropEventArgs.DropEventArgs(Microsoft.Maui.Controls.DataPackageView! view) -> void
Microsoft.Maui.Controls.InputView.CursorPosition.get -> int
Microsoft.Maui.Controls.InputView.CursorPosition.set -> void
Microsoft.Maui.Controls.InputView.FontAttributes.get -> Microsoft.Maui.Controls.FontAttributes
Microsoft.Maui.Controls.InputView.FontAttributes.set -> void
Microsoft.Maui.Controls.InputView.FontAutoScalingEnabled.get -> bool
Microsoft.Maui.Controls.InputView.FontAutoScalingEnabled.set -> void
Microsoft.Maui.Controls.InputView.FontSize.get -> double
Microsoft.Maui.Controls.InputView.FontSize.set -> void
Microsoft.Maui.Controls.InputView.SelectionLength.get -> int
Microsoft.Maui.Controls.InputView.SelectionLength.set -> void
Microsoft.Maui.Controls.PointerGestureRecognizer.PointerPressed -> System.EventHandler<Microsoft.Maui.Controls.PointerEventArgs!>?
Microsoft.Maui.Controls.PointerGestureRecognizer.PointerPressedCommand.get -> System.Windows.Input.ICommand!
Microsoft.Maui.Controls.PointerGestureRecognizer.PointerPressedCommand.set -> void
Microsoft.Maui.Controls.PointerGestureRecognizer.PointerPressedCommandParameter.get -> object!
Microsoft.Maui.Controls.PointerGestureRecognizer.PointerPressedCommandParameter.set -> void
Microsoft.Maui.Controls.PointerGestureRecognizer.PointerReleased -> System.EventHandler<Microsoft.Maui.Controls.PointerEventArgs!>?
Microsoft.Maui.Controls.PointerGestureRecognizer.PointerReleasedCommand.get -> System.Windows.Input.ICommand!
Microsoft.Maui.Controls.PointerGestureRecognizer.PointerReleasedCommand.set -> void
Microsoft.Maui.Controls.PointerGestureRecognizer.PointerReleasedCommandParameter.get -> object!
Microsoft.Maui.Controls.PointerGestureRecognizer.PointerReleasedCommandParameter.set -> void
override Microsoft.Maui.Controls.GradientBrush.IsEmpty.get -> bool
static readonly Microsoft.Maui.Controls.KeyboardAccelerator.KeyProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.KeyboardAccelerator.ModifiersProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.DragGestureRecognizer.CanDragProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.DragGestureRecognizer.DragStartingCommandParameterProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.DragGestureRecognizer.DragStartingCommandProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.DragGestureRecognizer.DropCompletedCommandParameterProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.DragGestureRecognizer.DropCompletedCommandProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.PointerGestureRecognizer.PointerPressedCommandParameterProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.PointerGestureRecognizer.PointerPressedCommandProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.PointerGestureRecognizer.PointerReleasedCommandParameterProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.PointerGestureRecognizer.PointerReleasedCommandProperty -> Microsoft.Maui.Controls.BindableProperty!
virtual Microsoft.Maui.Controls.DragEventArgs.GetPosition(Microsoft.Maui.Controls.Element? relativeTo) -> Microsoft.Maui.Graphics.Point?
virtual Microsoft.Maui.Controls.DragStartingEventArgs.GetPosition(Microsoft.Maui.Controls.Element? relativeTo) -> Microsoft.Maui.Graphics.Point?
virtual Microsoft.Maui.Controls.DropEventArgs.GetPosition(Microsoft.Maui.Controls.Element? relativeTo) -> Microsoft.Maui.Graphics.Point?
Microsoft.Maui.Controls.Border.~Border() -> void
Microsoft.Maui.Controls.IWindowCreator
Microsoft.Maui.Controls.IWindowCreator.CreateWindow(Microsoft.Maui.Controls.Application! app, Microsoft.Maui.IActivationState? activationState) -> Microsoft.Maui.Controls.Window!
Microsoft.Maui.Controls.LayoutOptions.Equals(Microsoft.Maui.Controls.LayoutOptions other) -> bool
Microsoft.Maui.Controls.PointerGestureRecognizer.PointerEnteredCommandParameter.get -> object!
Microsoft.Maui.Controls.PointerGestureRecognizer.PointerExitedCommandParameter.get -> object!
Microsoft.Maui.Controls.PointerGestureRecognizer.PointerMovedCommandParameter.get -> object!
*REMOVED*Microsoft.Maui.Controls.PointerGestureRecognizer.PointerEnteredCommandParameter.get -> System.Windows.Input.ICommand!
*REMOVED*Microsoft.Maui.Controls.PointerGestureRecognizer.PointerExitedCommandParameter.get -> System.Windows.Input.ICommand!
*REMOVED*Microsoft.Maui.Controls.PointerGestureRecognizer.PointerMovedCommandParameter.get -> System.Windows.Input.ICommand!
Microsoft.Maui.Controls.Region.Equals(Microsoft.Maui.Controls.Region other) -> bool
Microsoft.Maui.Controls.Shapes.Matrix.Equals(Microsoft.Maui.Controls.Shapes.Matrix other) -> bool
Microsoft.Maui.Controls.VisualElement.~VisualElement() -> void
override Microsoft.Maui.Controls.LayoutOptions.GetHashCode() -> int
override Microsoft.Maui.Controls.Region.GetHashCode() -> int
override Microsoft.Maui.Controls.Shapes.Matrix.GetHashCode() -> int
static Microsoft.Maui.Controls.LayoutOptions.operator !=(Microsoft.Maui.Controls.LayoutOptions left, Microsoft.Maui.Controls.LayoutOptions right) -> bool
static Microsoft.Maui.Controls.LayoutOptions.operator ==(Microsoft.Maui.Controls.LayoutOptions left, Microsoft.Maui.Controls.LayoutOptions right) -> bool
static Microsoft.Maui.Controls.Region.operator !=(Microsoft.Maui.Controls.Region left, Microsoft.Maui.Controls.Region right) -> bool
static Microsoft.Maui.Controls.Region.operator ==(Microsoft.Maui.Controls.Region left, Microsoft.Maui.Controls.Region right) -> bool
static Microsoft.Maui.Controls.Shapes.Matrix.operator !=(Microsoft.Maui.Controls.Shapes.Matrix left, Microsoft.Maui.Controls.Shapes.Matrix right) -> bool
static Microsoft.Maui.Controls.Shapes.Matrix.operator ==(Microsoft.Maui.Controls.Shapes.Matrix left, Microsoft.Maui.Controls.Shapes.Matrix right) -> bool
~override Microsoft.Maui.Controls.LayoutOptions.Equals(object obj) -> bool
~override Microsoft.Maui.Controls.Region.Equals(object obj) -> bool
~override Microsoft.Maui.Controls.Shapes.Matrix.Equals(object obj) -> bool
~static Microsoft.Maui.Controls.Platform.FormattedStringExtensions.ToFormattedString(this Microsoft.Maui.Controls.Label label) -> Tizen.UIExtensions.Common.FormattedString
Microsoft.Maui.Controls.Platform.FormattedStringExtensions
*REMOVED*Microsoft.Maui.Controls.Platform.ShellView.DefaultBackgroundCorlor -> Tizen.NUI.Color!
*REMOVED*override Microsoft.Maui.Controls.RefreshView.MeasureOverride(double widthConstraint, double heightConstraint) -> Microsoft.Maui.Graphics.Size
override Microsoft.Maui.Controls.View.ChangeVisualState() -> void
Microsoft.Maui.Controls.Handlers.BoxViewHandler
Microsoft.Maui.Controls.Handlers.BoxViewHandler.BoxViewHandler() -> void
Microsoft.Maui.Controls.InputView.IsTextPredictionEnabled.get -> bool
Microsoft.Maui.Controls.InputView.IsTextPredictionEnabled.set -> void
virtual Microsoft.Maui.Controls.VisualElement.IsEnabledCore.get -> bool
Microsoft.Maui.Controls.VisualElement.RefreshIsEnabledProperty() -> void
override Microsoft.Maui.Controls.Button.IsEnabledCore.get -> bool
override Microsoft.Maui.Controls.ImageButton.IsEnabledCore.get -> bool
override Microsoft.Maui.Controls.SearchBar.IsEnabledCore.get -> bool
~Microsoft.Maui.Controls.InputView.FontFamily.get -> string
~Microsoft.Maui.Controls.InputView.FontFamily.set -> void
~Microsoft.Maui.Controls.WebView.UserAgent.get -> string
~Microsoft.Maui.Controls.WebView.UserAgent.set -> void
~static readonly Microsoft.Maui.Controls.WebView.UserAgentProperty -> Microsoft.Maui.Controls.BindableProperty
*REMOVED*~Microsoft.Maui.Controls.OpenGLView.On<T>() -> Microsoft.Maui.Controls.IPlatformElementConfiguration<T, Microsoft.Maui.Controls.OpenGLView>
*REMOVED*~Microsoft.Maui.Controls.OpenGLView.OnDisplay.get -> System.Action<Microsoft.Maui.Graphics.Rect>
*REMOVED*~Microsoft.Maui.Controls.OpenGLView.OnDisplay.set -> void
*REMOVED*~static readonly Microsoft.Maui.Controls.OpenGLView.HasRenderLoopProperty -> Microsoft.Maui.Controls.BindableProperty
*REMOVED*Microsoft.Maui.Controls.IOpenGlViewController
*REMOVED*Microsoft.Maui.Controls.IOpenGlViewController.DisplayRequested -> System.EventHandler
*REMOVED*Microsoft.Maui.Controls.OpenGLView
*REMOVED*Microsoft.Maui.Controls.OpenGLView.Display() -> void
*REMOVED*Microsoft.Maui.Controls.OpenGLView.DisplayRequested -> System.EventHandler
*REMOVED*Microsoft.Maui.Controls.OpenGLView.HasRenderLoop.get -> bool
*REMOVED*Microsoft.Maui.Controls.OpenGLView.HasRenderLoop.set -> void
*REMOVED*Microsoft.Maui.Controls.OpenGLView.OpenGLView() -> void
*REMOVED*Microsoft.Maui.Controls.Application.SavePropertiesAsync() -> System.Threading.Tasks.Task!
*REMOVED*Microsoft.Maui.Controls.Application.Properties.get -> System.Collections.Generic.IDictionary<string!, object!>!
Microsoft.Maui.Controls.IValueConverter.Convert(object? value, System.Type! targetType, object? parameter, System.Globalization.CultureInfo! culture) -> object?
Microsoft.Maui.Controls.IValueConverter.ConvertBack(object? value, System.Type! targetType, object? parameter, System.Globalization.CultureInfo! culture) -> object?
~static Microsoft.Maui.Controls.GridExtensions.Add(this Microsoft.Maui.Controls.Grid grid, Microsoft.Maui.IView view, int left, int right, int top, int bottom) -> void
~static Microsoft.Maui.Controls.GridExtensions.AddWithSpan(this Microsoft.Maui.Controls.Grid grid, Microsoft.Maui.IView view, int row = 0, int column = 0, int rowSpan = 1, int columnSpan = 1) -> void
Microsoft.Maui.Controls.Shapes.Shape.~Shape() -> void
override Microsoft.Maui.Controls.Shapes.Shape.OnBindingContextChanged() -> void
~override Microsoft.Maui.Controls.ImageButton.OnPropertyChanged(string propertyName = null) -> void
~static Microsoft.Maui.Controls.Region.FromRectangles(System.Collections.Generic.IEnumerable<Microsoft.Maui.Graphics.Rect> rectangles) -> Microsoft.Maui.Controls.Region
Microsoft.Maui.Controls.ShellNavigationQueryParameters
Microsoft.Maui.Controls.ShellNavigationQueryParameters.Add(string! key, object! value) -> void
Microsoft.Maui.Controls.ShellNavigationQueryParameters.Add(System.Collections.Generic.KeyValuePair<string!, object!> item) -> void
Microsoft.Maui.Controls.ShellNavigationQueryParameters.Clear() -> void
Microsoft.Maui.Controls.ShellNavigationQueryParameters.Contains(System.Collections.Generic.KeyValuePair<string!, object!> item) -> bool
Microsoft.Maui.Controls.ShellNavigationQueryParameters.ContainsKey(string! key) -> bool
Microsoft.Maui.Controls.ShellNavigationQueryParameters.CopyTo(System.Collections.Generic.KeyValuePair<string!, object!>[]! array, int arrayIndex) -> void
Microsoft.Maui.Controls.ShellNavigationQueryParameters.Count.get -> int
Microsoft.Maui.Controls.ShellNavigationQueryParameters.GetEnumerator() -> System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<string!, object!>>!
Microsoft.Maui.Controls.ShellNavigationQueryParameters.IsReadOnly.get -> bool
Microsoft.Maui.Controls.ShellNavigationQueryParameters.Keys.get -> System.Collections.Generic.ICollection<string!>!
Microsoft.Maui.Controls.ShellNavigationQueryParameters.Remove(string! key) -> bool
Microsoft.Maui.Controls.ShellNavigationQueryParameters.Remove(System.Collections.Generic.KeyValuePair<string!, object!> item) -> bool
Microsoft.Maui.Controls.ShellNavigationQueryParameters.ShellNavigationQueryParameters() -> void
Microsoft.Maui.Controls.ShellNavigationQueryParameters.ShellNavigationQueryParameters(System.Collections.Generic.IDictionary<string!, object!>! dictionary) -> void
Microsoft.Maui.Controls.ShellNavigationQueryParameters.ShellNavigationQueryParameters(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string!, object!>>! collection) -> void
Microsoft.Maui.Controls.ShellNavigationQueryParameters.this[string! key].get -> object!
Microsoft.Maui.Controls.ShellNavigationQueryParameters.this[string! key].set -> void
Microsoft.Maui.Controls.ShellNavigationQueryParameters.TryGetValue(string! key, out object! value) -> bool
Microsoft.Maui.Controls.ShellNavigationQueryParameters.Values.get -> System.Collections.Generic.ICollection<object!>!
~Microsoft.Maui.Controls.Shell.GoToAsync(Microsoft.Maui.Controls.ShellNavigationState state, bool animate, Microsoft.Maui.Controls.ShellNavigationQueryParameters shellNavigationQueryParameters) -> System.Threading.Tasks.Task
~Microsoft.Maui.Controls.Shell.GoToAsync(Microsoft.Maui.Controls.ShellNavigationState state, Microsoft.Maui.Controls.ShellNavigationQueryParameters shellNavigationQueryParameters) -> System.Threading.Tasks.Task
~static readonly Microsoft.Maui.Controls.InputView.CursorPositionProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.InputView.FontAttributesProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.InputView.FontAutoScalingEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.InputView.FontFamilyProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.InputView.FontSizeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.InputView.IsTextPredictionEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.InputView.SelectionLengthProperty -> Microsoft.Maui.Controls.BindableProperty
~Microsoft.Maui.Controls.Element.AddLogicalChild(Microsoft.Maui.Controls.Element element) -> void
~Microsoft.Maui.Controls.Element.InsertLogicalChild(int index, Microsoft.Maui.Controls.Element element) -> void
~Microsoft.Maui.Controls.Element.RemoveLogicalChild(Microsoft.Maui.Controls.Element element) -> bool
Microsoft.Maui.Controls.Element.ClearLogicalChildren() -> void
*REMOVED*~Microsoft.Maui.Controls.ItemsView.AddLogicalChild(Microsoft.Maui.Controls.Element element) -> void
*REMOVED*~Microsoft.Maui.Controls.ItemsView.RemoveLogicalChild(Microsoft.Maui.Controls.Element element) -> void
*REMOVED*~Microsoft.Maui.Controls.Shell.AddLogicalChild(Microsoft.Maui.Controls.Element element) -> void
*REMOVED*~Microsoft.Maui.Controls.Shell.RemoveLogicalChild(Microsoft.Maui.Controls.Element element) -> void
Microsoft.Maui.Controls.PointerEventArgs.PlatformArgs.get -> Microsoft.Maui.Controls.PlatformPointerEventArgs?
Microsoft.Maui.Controls.PlatformPointerEventArgs
*REMOVED*override Microsoft.Maui.Controls.SwipeItems.OnBindingContextChanged() -> void
Microsoft.Maui.Controls.Handlers.Compatibility.ViewRenderer<TElement, TPlatformView>.ViewRenderer(Microsoft.Maui.IPropertyMapper! mapper, Microsoft.Maui.CommandMapper? commandMapper = null) -> void
Microsoft.Maui.Controls.Handlers.Compatibility.VisualElementRenderer<TElement>.VisualElementRenderer(Microsoft.Maui.IPropertyMapper! mapper, Microsoft.Maui.CommandMapper? commandMapper = null) -> void
~static readonly Microsoft.Maui.Controls.ContentPage.HideSoftInputOnTappedProperty -> Microsoft.Maui.Controls.BindableProperty
Microsoft.Maui.Controls.ContentPage.HideSoftInputOnTapped.get -> bool
Microsoft.Maui.Controls.ContentPage.HideSoftInputOnTapped.set -> void
*REMOVED*~Microsoft.Maui.Controls.Editor.FontFamily.get -> string
*REMOVED*~Microsoft.Maui.Controls.Editor.FontFamily.set -> void
*REMOVED*Microsoft.Maui.Controls.Editor.CursorPosition.get -> int
*REMOVED*Microsoft.Maui.Controls.Editor.CursorPosition.set -> void
*REMOVED*Microsoft.Maui.Controls.Editor.FontAttributes.get -> Microsoft.Maui.Controls.FontAttributes
*REMOVED*Microsoft.Maui.Controls.Editor.FontAttributes.set -> void
*REMOVED*Microsoft.Maui.Controls.Editor.FontAutoScalingEnabled.get -> bool
*REMOVED*Microsoft.Maui.Controls.Editor.FontAutoScalingEnabled.set -> void
*REMOVED*Microsoft.Maui.Controls.Editor.FontSize.get -> double
*REMOVED*Microsoft.Maui.Controls.Editor.FontSize.set -> void
*REMOVED*Microsoft.Maui.Controls.Editor.SelectionLength.get -> int
*REMOVED*Microsoft.Maui.Controls.Editor.SelectionLength.set -> void
*REMOVED*~Microsoft.Maui.Controls.SearchBar.FontFamily.get -> string
*REMOVED*~Microsoft.Maui.Controls.SearchBar.FontFamily.set -> void
*REMOVED*Microsoft.Maui.Controls.SearchBar.CursorPosition.get -> int
*REMOVED*Microsoft.Maui.Controls.SearchBar.CursorPosition.set -> void
*REMOVED*Microsoft.Maui.Controls.SearchBar.FontAttributes.get -> Microsoft.Maui.Controls.FontAttributes
*REMOVED*Microsoft.Maui.Controls.SearchBar.FontAttributes.set -> void
*REMOVED*Microsoft.Maui.Controls.SearchBar.FontAutoScalingEnabled.get -> bool
*REMOVED*Microsoft.Maui.Controls.SearchBar.FontAutoScalingEnabled.set -> void
*REMOVED*Microsoft.Maui.Controls.SearchBar.FontSize.get -> double
*REMOVED*Microsoft.Maui.Controls.SearchBar.FontSize.set -> void
*REMOVED*Microsoft.Maui.Controls.SearchBar.SelectionLength.get -> int
*REMOVED*Microsoft.Maui.Controls.SearchBar.SelectionLength.set -> void
*REMOVED*~Microsoft.Maui.Controls.Entry.FontFamily.get -> string
*REMOVED*~Microsoft.Maui.Controls.Entry.FontFamily.set -> void
*REMOVED*Microsoft.Maui.Controls.Entry.CursorPosition.get -> int
*REMOVED*Microsoft.Maui.Controls.Entry.CursorPosition.set -> void
*REMOVED*Microsoft.Maui.Controls.Entry.FontAttributes.get -> Microsoft.Maui.Controls.FontAttributes
*REMOVED*Microsoft.Maui.Controls.Entry.FontAttributes.set -> void
*REMOVED*Microsoft.Maui.Controls.Entry.FontAutoScalingEnabled.get -> bool
*REMOVED*Microsoft.Maui.Controls.Entry.FontAutoScalingEnabled.set -> void
*REMOVED*Microsoft.Maui.Controls.Entry.FontSize.get -> double
*REMOVED*Microsoft.Maui.Controls.Entry.FontSize.set -> void
*REMOVED*Microsoft.Maui.Controls.Entry.SelectionLength.get -> int
*REMOVED*Microsoft.Maui.Controls.Entry.SelectionLength.set -> void
